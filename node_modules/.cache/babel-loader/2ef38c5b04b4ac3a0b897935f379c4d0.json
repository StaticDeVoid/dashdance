{"ast":null,"code":"import axios from \"axios\";\nimport { queryClient } from \"../AppProviders\";\nconst client = axios.create();\nexport async function authenticate() {\n  return await client.get(\"/auth/login\").then(res => res.data.user);\n}\nexport async function login(payload) {\n  await client.post(\"/auth/login\", payload);\n  window.location.pathname = \"/\";\n}\nexport async function signup(payload) {\n  await client.post(\"/auth/signup\", payload);\n  window.location.assign(\"/settings/profile?redirected=true\");\n}\nexport async function logout() {\n  await client.get(\"/auth/logout\");\n  window.location.pathname = \"/\";\n}\nexport async function getNotifications() {\n  return await client.get(`/api/notifications`).then(res => res.data.notifications);\n}\nexport async function readNotification(notification) {\n  await client.get(`/api/notification_read/${notification._id}`);\n}\nexport async function getReplies(postId) {\n  return await client.get(`/api/post/${postId}/replies`).then(res => res.data.posts);\n}\nexport async function getUserTimeline(username) {\n  return await client.get(`/api/user_timeline/${username}`).then(res => res.data);\n}\nexport async function getPosts({\n  pageParam = 1\n}) {\n  return await client.get(`/api/home_timeline?p=${pageParam}`).then(res => res.data.posts);\n}\nexport async function getPostLikes(postId) {\n  return await client.get(`/api/post/${postId}/likes`).then(res => res.data.users);\n}\nexport async function followUser(username) {\n  await client.get(`/api/follow/${username}`);\n  await queryClient.invalidateQueries(\"Search\");\n  await queryClient.invalidateQueries(\"UserFriends\");\n  await queryClient.invalidateQueries(\"Posts\");\n  await queryClient.invalidateQueries(\"UserSuggestions\");\n  await queryClient.invalidateQueries(\"UserDetail\");\n}\nexport async function unfollowUser(username) {\n  await client.get(`/api/unfollow/${username}`);\n  await queryClient.invalidateQueries(\"Search\");\n  await queryClient.invalidateQueries(\"UserFriends\");\n  await queryClient.invalidateQueries(\"Posts\");\n  await queryClient.invalidateQueries(\"UserSuggestions\");\n  await queryClient.invalidateQueries(\"UserDetail\");\n}\nexport async function getPostReposts(postId) {\n  return await client.get(`/api/post/${postId}/reposts`).then(res => res.data.users);\n}\nexport async function getUserFollowers(username) {\n  return await client.get(`/api/followers/${username}`).then(res => res.data.users);\n}\nexport async function getFriends(username) {\n  return await client.get(`/api/friends/${username}`).then(res => res.data.users);\n}\nexport async function getUserSuggestions() {\n  return await client.get(\"/api/users\").then(res => res.data.users);\n}\nexport async function getTrends() {\n  return await client.get(\"/api/trends\").then(res => res.data.trends);\n}\nexport async function getSearchResults(query) {\n  return await client.get(`/api/search?q=${encodeURIComponent(query)}`).then(res => res.data);\n}\nexport async function likePost(post) {\n  await client.get(`/api/like/${post.id_str}`);\n  await queryClient.invalidateQueries(\"Posts\");\n  await queryClient.invalidateQueries(\"PostDetail\");\n  await queryClient.invalidateQueries(\"PostReplies\");\n  await queryClient.invalidateQueries(\"UserDetail\");\n  await queryClient.invalidateQueries(\"Search\");\n}\nexport async function unlikePost(post) {\n  await client.get(`/api/unlike/${post.id_str}`);\n  await queryClient.invalidateQueries(\"Posts\");\n  await queryClient.invalidateQueries(\"PostDetail\");\n  await queryClient.invalidateQueries(\"PostReplies\");\n  await queryClient.invalidateQueries(\"UserDetail\");\n  await queryClient.invalidateQueries(\"Search\");\n}\nexport async function unrepostPost(post) {\n  await client.post(`/api/unrepost`, post);\n  await queryClient.invalidateQueries(\"Posts\");\n  await queryClient.invalidateQueries(\"PostDetail\");\n  await queryClient.invalidateQueries(\"PostReplies\");\n  await queryClient.invalidateQueries(\"UserDetail\");\n}\nexport async function repostPost(post) {\n  await client.post(`/api/repost`, post);\n  await queryClient.invalidateQueries(\"Posts\");\n  await queryClient.invalidateQueries(\"PostDetail\");\n  await queryClient.invalidateQueries(\"PostReplies\");\n  await queryClient.invalidateQueries(\"UserDetail\");\n}\nexport async function updateUserDetails(user) {\n  await client.post(\"/api/updateuser\", user);\n}\nexport async function createPost(post, url = \"/api/post\") {\n  await client.post(url, post);\n  await queryClient.invalidateQueries(\"Posts\");\n}\nexport async function getPostById(postId) {\n  return await client.get(`/api/post/${postId}`).then(res => res.data.post);\n}","map":{"version":3,"sources":["C:/Users/twist/OneDrive/Documents/react/build-twitter-with-react/src/utils/api-client.js"],"names":["axios","queryClient","client","create","authenticate","get","then","res","data","user","login","payload","post","window","location","pathname","signup","assign","logout","getNotifications","notifications","readNotification","notification","_id","getReplies","postId","posts","getUserTimeline","username","getPosts","pageParam","getPostLikes","users","followUser","invalidateQueries","unfollowUser","getPostReposts","getUserFollowers","getFriends","getUserSuggestions","getTrends","trends","getSearchResults","query","encodeURIComponent","likePost","id_str","unlikePost","unrepostPost","repostPost","updateUserDetails","createPost","url","getPostById"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { queryClient } from \"../AppProviders\";\n\nconst client = axios.create();\n\nexport async function authenticate() {\n  return await client.get(\"/auth/login\").then((res) => res.data.user);\n}\n\nexport async function login(payload) {\n  await client.post(\"/auth/login\", payload);\n  window.location.pathname = \"/\";\n}\n\nexport async function signup(payload) {\n  await client.post(\"/auth/signup\", payload);\n  window.location.assign(\"/settings/profile?redirected=true\");\n}\n\nexport async function logout() {\n  await client.get(\"/auth/logout\");\n  window.location.pathname = \"/\";\n}\n\nexport async function getNotifications() {\n  return await client\n    .get(`/api/notifications`)\n    .then((res) => res.data.notifications);\n}\n\nexport async function readNotification(notification) {\n  await client.get(`/api/notification_read/${notification._id}`);\n}\n\nexport async function getReplies(postId) {\n  return await client\n    .get(`/api/post/${postId}/replies`)\n    .then((res) => res.data.posts);\n}\n\nexport async function getUserTimeline(username) {\n  return await client\n    .get(`/api/user_timeline/${username}`)\n    .then((res) => res.data);\n}\n\nexport async function getPosts({ pageParam = 1 }) {\n  return await client\n    .get(`/api/home_timeline?p=${pageParam}`)\n    .then((res) => res.data.posts);\n}\n\nexport async function getPostLikes(postId) {\n  return await client\n    .get(`/api/post/${postId}/likes`)\n    .then((res) => res.data.users);\n}\n\nexport async function followUser(username) {\n  await client.get(`/api/follow/${username}`);\n  await queryClient.invalidateQueries(\"Search\");\n  await queryClient.invalidateQueries(\"UserFriends\");\n  await queryClient.invalidateQueries(\"Posts\");\n  await queryClient.invalidateQueries(\"UserSuggestions\");\n  await queryClient.invalidateQueries(\"UserDetail\");\n}\n\nexport async function unfollowUser(username) {\n  await client.get(`/api/unfollow/${username}`);\n  await queryClient.invalidateQueries(\"Search\");\n  await queryClient.invalidateQueries(\"UserFriends\");\n  await queryClient.invalidateQueries(\"Posts\");\n  await queryClient.invalidateQueries(\"UserSuggestions\");\n  await queryClient.invalidateQueries(\"UserDetail\");\n}\n\nexport async function getPostReposts(postId) {\n  return await client\n    .get(`/api/post/${postId}/reposts`)\n    .then((res) => res.data.users);\n}\n\nexport async function getUserFollowers(username) {\n  return await client\n    .get(`/api/followers/${username}`)\n    .then((res) => res.data.users);\n}\n\nexport async function getFriends(username) {\n  return await client\n    .get(`/api/friends/${username}`)\n    .then((res) => res.data.users);\n}\n\nexport async function getUserSuggestions() {\n  return await client.get(\"/api/users\").then((res) => res.data.users);\n}\n\nexport async function getTrends() {\n  return await client.get(\"/api/trends\").then((res) => res.data.trends);\n}\n\nexport async function getSearchResults(query) {\n  return await client\n    .get(`/api/search?q=${encodeURIComponent(query)}`)\n    .then((res) => res.data);\n}\n\nexport async function likePost(post) {\n  await client.get(`/api/like/${post.id_str}`);\n  await queryClient.invalidateQueries(\"Posts\");\n  await queryClient.invalidateQueries(\"PostDetail\");\n  await queryClient.invalidateQueries(\"PostReplies\");\n  await queryClient.invalidateQueries(\"UserDetail\");\n  await queryClient.invalidateQueries(\"Search\");\n}\n\nexport async function unlikePost(post) {\n  await client.get(`/api/unlike/${post.id_str}`);\n  await queryClient.invalidateQueries(\"Posts\");\n  await queryClient.invalidateQueries(\"PostDetail\");\n  await queryClient.invalidateQueries(\"PostReplies\");\n  await queryClient.invalidateQueries(\"UserDetail\");\n  await queryClient.invalidateQueries(\"Search\");\n}\n\nexport async function unrepostPost(post) {\n  await client.post(`/api/unrepost`, post);\n  await queryClient.invalidateQueries(\"Posts\");\n  await queryClient.invalidateQueries(\"PostDetail\");\n  await queryClient.invalidateQueries(\"PostReplies\");\n  await queryClient.invalidateQueries(\"UserDetail\");\n}\n\nexport async function repostPost(post) {\n  await client.post(`/api/repost`, post);\n  await queryClient.invalidateQueries(\"Posts\");\n  await queryClient.invalidateQueries(\"PostDetail\");\n  await queryClient.invalidateQueries(\"PostReplies\");\n  await queryClient.invalidateQueries(\"UserDetail\");\n}\n\nexport async function updateUserDetails(user) {\n  await client.post(\"/api/updateuser\", user);\n}\n\nexport async function createPost(post, url = \"/api/post\") {\n  await client.post(url, post);\n  await queryClient.invalidateQueries(\"Posts\");\n}\n\nexport async function getPostById(postId) {\n  return await client.get(`/api/post/${postId}`).then((res) => res.data.post);\n}\n"]},"metadata":{},"sourceType":"module"}