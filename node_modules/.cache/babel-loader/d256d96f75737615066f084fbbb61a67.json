{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twist\\\\OneDrive\\\\Documents\\\\react\\\\build-twitter-with-react\\\\src\\\\components\\\\PostText.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport WithUrls from \"components/WithUrls\";\nimport { truncateText } from \"utils/truncate\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostText({\n  post,\n  to,\n  expanded = false\n}) {\n  _s();\n\n  const history = useHistory();\n  let {\n    text\n  } = post;\n\n  if (!expanded) {\n    text = truncateText(text, 5);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...OnClick(e => {\n      to && history.push(to);\n    }),\n    children: /*#__PURE__*/_jsxDEV(WithUrls, {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostText, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = PostText;\n\nconst OnClick = (() => {\n  let clickTime = 0;\n  let pos = {\n    x: 0,\n    y: 0\n  };\n  return onClick => ({\n    onMouseDown: ({\n      nativeEvent: e\n    }) => {\n      clickTime = Date.now();\n      pos.x = e.x;\n      pos.y = e.y;\n    },\n    onMouseUp: ({\n      nativeEvent: e\n    }) => {\n      Date.now() - clickTime < 500 && pos.x === e.x && pos.y === e.y && e.which === 1 && onClick();\n    }\n  });\n})();\n\nvar _c;\n\n$RefreshReg$(_c, \"PostText\");","map":{"version":3,"sources":["C:/Users/twist/OneDrive/Documents/react/build-twitter-with-react/src/components/PostText.js"],"names":["React","WithUrls","truncateText","useHistory","PostText","post","to","expanded","history","text","OnClick","e","push","clickTime","pos","x","y","onClick","onMouseDown","nativeEvent","Date","now","onMouseUp","which"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,EAAR;AAAYC,EAAAA,QAAQ,GAAG;AAAvB,CAAlB,EAAkD;AAAA;;AAC/D,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,MAAI;AAAEM,IAAAA;AAAF,MAAWJ,IAAf;;AAEA,MAAI,CAACE,QAAL,EAAe;AACbE,IAAAA,IAAI,GAAGP,YAAY,CAACO,IAAD,EAAO,CAAP,CAAnB;AACD;;AAED,sBACE,oBACMC,OAAO,CAAEC,CAAD,IAAO;AACjBL,MAAAA,EAAE,IAAIE,OAAO,CAACI,IAAR,CAAaN,EAAb,CAAN;AACD,KAFU,CADb;AAAA,2BAKE,QAAC,QAAD;AAAA,gBAAWG;AAAX;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAjBuBL,Q;UACND,U;;;KADMC,Q;;AAmBxB,MAAMM,OAAO,GAAG,CAAC,MAAM;AACrB,MAAIG,SAAS,GAAG,CAAhB;AACA,MAAIC,GAAG,GAAG;AAAEC,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAV;AAEA,SAAQC,OAAD,KAAc;AACnBC,IAAAA,WAAW,EAAE,CAAC;AAAEC,MAAAA,WAAW,EAAER;AAAf,KAAD,KAAwB;AACnCE,MAAAA,SAAS,GAAGO,IAAI,CAACC,GAAL,EAAZ;AACAP,MAAAA,GAAG,CAACC,CAAJ,GAAQJ,CAAC,CAACI,CAAV;AACAD,MAAAA,GAAG,CAACE,CAAJ,GAAQL,CAAC,CAACK,CAAV;AACD,KALkB;AAMnBM,IAAAA,SAAS,EAAE,CAAC;AAAEH,MAAAA,WAAW,EAAER;AAAf,KAAD,KAAwB;AACjCS,MAAAA,IAAI,CAACC,GAAL,KAAaR,SAAb,GAAyB,GAAzB,IACEC,GAAG,CAACC,CAAJ,KAAUJ,CAAC,CAACI,CADd,IAEED,GAAG,CAACE,CAAJ,KAAUL,CAAC,CAACK,CAFd,IAGEL,CAAC,CAACY,KAAF,KAAY,CAHd,IAIEN,OAAO,EAJT;AAKD;AAZkB,GAAd,CAAP;AAcD,CAlBe,GAAhB","sourcesContent":["import React from \"react\";\nimport WithUrls from \"components/WithUrls\";\nimport { truncateText } from \"utils/truncate\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function PostText({ post, to, expanded = false }) {\n  const history = useHistory();\n  let { text } = post;\n\n  if (!expanded) {\n    text = truncateText(text, 5);\n  }\n\n  return (\n    <div\n      {...OnClick((e) => {\n        to && history.push(to);\n      })}\n    >\n      <WithUrls>{text}</WithUrls>\n    </div>\n  );\n}\n\nconst OnClick = (() => {\n  let clickTime = 0;\n  let pos = { x: 0, y: 0 };\n\n  return (onClick) => ({\n    onMouseDown: ({ nativeEvent: e }) => {\n      clickTime = Date.now();\n      pos.x = e.x;\n      pos.y = e.y;\n    },\n    onMouseUp: ({ nativeEvent: e }) => {\n      Date.now() - clickTime < 500 &&\n        pos.x === e.x &&\n        pos.y === e.y &&\n        e.which === 1 &&\n        onClick();\n    },\n  });\n})();\n"]},"metadata":{},"sourceType":"module"}