{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twist\\\\OneDrive\\\\Documents\\\\react\\\\build-twitter-with-react\\\\src\\\\components\\\\MultiMedia.js\";\nimport React from \"react\";\nimport { Card, Image } from \"react-bootstrap\";\nimport { ReactTinyLink } from \"react-tiny-link\";\nimport getUrls from \"get-urls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MultiMedia(props) {\n  const {\n    post,\n    expanded = false,\n    className\n  } = props;\n  const {\n    entities = {},\n    text\n  } = post;\n  let {\n    media: [photo] = [],\n    urls: [url]\n  } = entities;\n\n  if (photo) {\n    photo = /*#__PURE__*/_jsxDEV(Image, {\n      fluid: true,\n      rounded: true,\n      src: photo.media_url_https,\n      alt: \"media preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!url) {\n    let unparsed_urls = Array.from(getUrls(text));\n\n    if (unparsed_urls.length) {\n      url = {\n        expanded_url: unparsed_urls[0]\n      };\n    }\n  }\n\n  if (url) {\n    url = /*#__PURE__*/_jsxDEV(ReactTinyLink, {\n      width: \"100%\",\n      cardSize: expanded ? \"large\" : \"small\",\n      autoPlay: expanded,\n      showGraphic: true,\n      maxLine: 2,\n      minLine: 1,\n      url: url.expanded_url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (photo || url) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: `${className} w-100 bg-transparent`,\n      style: {\n        maxHeight: !expanded ? \"350\" : \"fit-content\",\n        overflow: \"hidden\"\n      },\n      children: [photo, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-1\",\n        children: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n}\n_c = MultiMedia;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiMedia\");","map":{"version":3,"sources":["C:/Users/twist/OneDrive/Documents/react/build-twitter-with-react/src/components/MultiMedia.js"],"names":["React","Card","Image","ReactTinyLink","getUrls","MultiMedia","props","post","expanded","className","entities","text","media","photo","urls","url","media_url_https","unparsed_urls","Array","from","length","expanded_url","maxHeight","overflow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,iBAA5B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,OAAP,MAAoB,UAApB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACxC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAQ,GAAG,KAAnB;AAA0BC,IAAAA;AAA1B,MAAwCH,KAA9C;AAEA,QAAM;AAAEI,IAAAA,QAAQ,GAAG,EAAb;AAAiBC,IAAAA;AAAjB,MAA0BJ,IAAhC;AACA,MAAI;AACFK,IAAAA,KAAK,EAAE,CAACC,KAAD,IAAU,EADf;AAEFC,IAAAA,IAAI,EAAE,CAACC,GAAD;AAFJ,MAGAL,QAHJ;;AAKA,MAAIG,KAAJ,EAAW;AACTA,IAAAA,KAAK,gBACH,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,OAAO,MAApB;AAAqB,MAAA,GAAG,EAAEA,KAAK,CAACG,eAAhC;AAAiD,MAAA,GAAG,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,MAAI,CAACD,GAAL,EAAU;AACR,QAAIE,aAAa,GAAGC,KAAK,CAACC,IAAN,CAAWf,OAAO,CAACO,IAAD,CAAlB,CAApB;;AACA,QAAIM,aAAa,CAACG,MAAlB,EAA0B;AACxBL,MAAAA,GAAG,GAAG;AACJM,QAAAA,YAAY,EAAEJ,aAAa,CAAC,CAAD;AADvB,OAAN;AAGD;AACF;;AAED,MAAIF,GAAJ,EAAS;AACPA,IAAAA,GAAG,gBACD,QAAC,aAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,QAAQ,EAAEP,QAAQ,GAAG,OAAH,GAAa,OAFjC;AAGE,MAAA,QAAQ,EAAEA,QAHZ;AAIE,MAAA,WAAW,MAJb;AAKE,MAAA,OAAO,EAAE,CALX;AAME,MAAA,OAAO,EAAE,CANX;AAOE,MAAA,GAAG,EAAEO,GAAG,CAACM;AAPX;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAED,MAAIR,KAAK,IAAIE,GAAb,EAAkB;AAChB,wBACE,QAAC,IAAD;AACE,MAAA,SAAS,EAAG,GAAEN,SAAU,uBAD1B;AAEE,MAAA,KAAK,EAAE;AACLa,QAAAA,SAAS,EAAE,CAACd,QAAD,GAAY,KAAZ,GAAoB,aAD1B;AAELe,QAAAA,QAAQ,EAAE;AAFL,OAFT;AAAA,iBAOGV,KAPH,eAQE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAAuBE;AAAvB;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAED,SAAO,IAAP;AACD;KAtDuBV,U","sourcesContent":["import React from \"react\";\nimport { Card, Image } from \"react-bootstrap\";\nimport { ReactTinyLink } from \"react-tiny-link\";\nimport getUrls from \"get-urls\";\n\nexport default function MultiMedia(props) {\n  const { post, expanded = false, className } = props;\n\n  const { entities = {}, text } = post;\n  let {\n    media: [photo] = [],\n    urls: [url],\n  } = entities;\n\n  if (photo) {\n    photo = (\n      <Image fluid rounded src={photo.media_url_https} alt=\"media preview\" />\n    );\n  }\n\n  if (!url) {\n    let unparsed_urls = Array.from(getUrls(text));\n    if (unparsed_urls.length) {\n      url = {\n        expanded_url: unparsed_urls[0],\n      };\n    }\n  }\n\n  if (url) {\n    url = (\n      <ReactTinyLink\n        width=\"100%\"\n        cardSize={expanded ? \"large\" : \"small\"}\n        autoPlay={expanded}\n        showGraphic\n        maxLine={2}\n        minLine={1}\n        url={url.expanded_url}\n      />\n    );\n  }\n\n  if (photo || url) {\n    return (\n      <Card\n        className={`${className} w-100 bg-transparent`}\n        style={{\n          maxHeight: !expanded ? \"350\" : \"fit-content\",\n          overflow: \"hidden\",\n        }}\n      >\n        {photo}\n        <div className=\"mt-1\">{url}</div>\n      </Card>\n    );\n  }\n\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}