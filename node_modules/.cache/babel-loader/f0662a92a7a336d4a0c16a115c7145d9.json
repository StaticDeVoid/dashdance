{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twist\\\\OneDrive\\\\Documents\\\\react\\\\build-twitter-with-react\\\\src\\\\components\\\\WithUrls.js\";\nimport React from \"react\";\nimport { unescape } from \"html-escaper\";\nimport anchorme from \"anchorme\";\nimport DOMPurify from \"dompurify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WithUrls({\n  children\n}) {\n  if (!children || !children.toString) {\n    return null;\n  }\n\n  let text = children.toString();\n  text = DOMPurify.sanitize(unescape(text), {\n    ALLOWED_TAGS: [\"b\"]\n  });\n  text = anchorme({\n    input: text,\n    options: {\n      attributes: {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        class: \"text-wrap break-all\"\n      },\n      truncate: 50\n    },\n    extensions: [{\n      test: /#(\\w|_)+/gi,\n      transform: string => `<a class=\"high-index\" href=\"/search?q=${encodeURIComponent(string)}\"> ${string} </a>`\n    }, {\n      test: /@(\\w|_)+/gi,\n      transform: string => `<a class=\"high-index\" href=\"/user/${string.slice(1)}\">${string}</a>`\n    }]\n  });\n\n  if (DOMPurify.sanitize(text, {\n    ALLOWED_TAGS: []\n  }).trim() === \"\") {\n    text = \"null\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mw-100 overflow-hidden\",\n      dangerouslySetInnerHTML: {\n        __html: text\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = WithUrls;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithUrls\");","map":{"version":3,"sources":["C:/Users/twist/OneDrive/Documents/react/build-twitter-with-react/src/components/WithUrls.js"],"names":["React","unescape","anchorme","DOMPurify","WithUrls","children","toString","text","sanitize","ALLOWED_TAGS","input","options","attributes","target","rel","class","truncate","extensions","test","transform","string","encodeURIComponent","slice","trim","__html"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC7C,MAAI,CAACA,QAAD,IAAa,CAACA,QAAQ,CAACC,QAA3B,EAAqC;AACnC,WAAO,IAAP;AACD;;AAED,MAAIC,IAAI,GAAGF,QAAQ,CAACC,QAAT,EAAX;AACAC,EAAAA,IAAI,GAAGJ,SAAS,CAACK,QAAV,CAAmBP,QAAQ,CAACM,IAAD,CAA3B,EAAmC;AAAEE,IAAAA,YAAY,EAAE,CAAC,GAAD;AAAhB,GAAnC,CAAP;AAEAF,EAAAA,IAAI,GAAGL,QAAQ,CAAC;AACdQ,IAAAA,KAAK,EAAEH,IADO;AAEdI,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EAAE;AACVC,QAAAA,MAAM,EAAE,QADE;AAEVC,QAAAA,GAAG,EAAE,qBAFK;AAGVC,QAAAA,KAAK,EAAE;AAHG,OADL;AAMPC,MAAAA,QAAQ,EAAE;AANH,KAFK;AAWdC,IAAAA,UAAU,EAAE,CACV;AACEC,MAAAA,IAAI,EAAE,YADR;AAEEC,MAAAA,SAAS,EAAGC,MAAD,IACR,yCAAwCC,kBAAkB,CACzDD,MADyD,CAEzD,MAAKA,MAAO;AALlB,KADU,EAQV;AACEF,MAAAA,IAAI,EAAE,YADR;AAEEC,MAAAA,SAAS,EAAGC,MAAD,IACR,qCAAoCA,MAAM,CAACE,KAAP,CAAa,CAAb,CAAgB,KAAIF,MAAO;AAHpE,KARU;AAXE,GAAD,CAAf;;AA2BA,MAAIjB,SAAS,CAACK,QAAV,CAAmBD,IAAnB,EAAyB;AAAEE,IAAAA,YAAY,EAAE;AAAhB,GAAzB,EAA+Cc,IAA/C,OAA0D,EAA9D,EAAkE;AAChEhB,IAAAA,IAAI,GAAG,MAAP;AACD;;AAED,sBACE;AAAA,2BACE;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,uBAAuB,EAAE;AAAEiB,QAAAA,MAAM,EAAEjB;AAAV;AAF3B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAQD;KA/CuBH,Q","sourcesContent":["import React from \"react\";\nimport { unescape } from \"html-escaper\";\nimport anchorme from \"anchorme\";\nimport DOMPurify from \"dompurify\";\n\nexport default function WithUrls({ children }) {\n  if (!children || !children.toString) {\n    return null;\n  }\n\n  let text = children.toString();\n  text = DOMPurify.sanitize(unescape(text), { ALLOWED_TAGS: [\"b\"] });\n\n  text = anchorme({\n    input: text,\n    options: {\n      attributes: {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        class: \"text-wrap break-all\",\n      },\n      truncate: 50,\n    },\n\n    extensions: [\n      {\n        test: /#(\\w|_)+/gi,\n        transform: (string) =>\n          `<a class=\"high-index\" href=\"/search?q=${encodeURIComponent(\n            string\n          )}\"> ${string} </a>`,\n      },\n      {\n        test: /@(\\w|_)+/gi,\n        transform: (string) =>\n          `<a class=\"high-index\" href=\"/user/${string.slice(1)}\">${string}</a>`,\n      },\n    ],\n  });\n\n  if (DOMPurify.sanitize(text, { ALLOWED_TAGS: [] }).trim() === \"\") {\n    text = \"null\";\n  }\n\n  return (\n    <>\n      <div\n        className=\"mw-100 overflow-hidden\"\n        dangerouslySetInnerHTML={{ __html: text }}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}