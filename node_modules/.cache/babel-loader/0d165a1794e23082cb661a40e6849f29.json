{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twist\\\\OneDrive\\\\Documents\\\\react\\\\build-twitter-with-react\\\\src\\\\pages\\\\Notifications.js\",\n    _s = $RefreshSig$();\n\nimport Heading from \"components/Heading\";\nimport React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport NotificationItem from \"../components/NotificationItem\";\nimport Spinner from \"../components/Spinner\";\nimport { getNotifications } from \"../utils/api-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Notifications() {\n  _s();\n\n  const {\n    data: notifications,\n    isLoading,\n    isSuccess\n  } = useQuery(\"Notifications\", getNotifications);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      title: \"Notifications\",\n      btnProfile: true,\n      backButton: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      variant: \"flush\",\n      children: isSuccess ? notifications.map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n        notification: notification\n      }, notification._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message font-weight-bold\",\n        children: \"No notifications yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Notifications, \"XbvLR2jgHsn23VBJk+uSWv1mX8U=\", false, function () {\n  return [useQuery];\n});\n\n_c = Notifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"sources":["C:/Users/twist/OneDrive/Documents/react/build-twitter-with-react/src/pages/Notifications.js"],"names":["Heading","React","ListGroup","useQuery","NotificationItem","Spinner","getNotifications","Notifications","data","notifications","isLoading","isSuccess","map","notification","_id"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM;AACJC,IAAAA,IAAI,EAAEC,aADF;AAEJC,IAAAA,SAFI;AAGJC,IAAAA;AAHI,MAIFR,QAAQ,CAAC,eAAD,EAAkBG,gBAAlB,CAJZ;AAMA,MAAII,SAAJ,EAAe,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEf,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,eAAf;AAA+B,MAAA,UAAU,MAAzC;AAA0C,MAAA,UAAU;AAApD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA,gBACGC,SAAS,GACRF,aAAa,CAACG,GAAd,CAAmBC,YAAD,iBAChB,QAAC,gBAAD;AAEE,QAAA,YAAY,EAAEA;AAFhB,SACOA,YAAY,CAACC,GADpB;AAAA;AAAA;AAAA;AAAA,cADF,CADQ,gBAQR;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAiBD;;GA1BuBP,a;UAKlBJ,Q;;;KALkBI,a","sourcesContent":["import Heading from \"components/Heading\";\nimport React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport NotificationItem from \"../components/NotificationItem\";\nimport Spinner from \"../components/Spinner\";\nimport { getNotifications } from \"../utils/api-client\";\n\nexport default function Notifications() {\n  const {\n    data: notifications,\n    isLoading,\n    isSuccess,\n  } = useQuery(\"Notifications\", getNotifications);\n\n  if (isLoading) return <Spinner />;\n\n  return (\n    <>\n      <Heading title=\"Notifications\" btnProfile backButton />\n      <ListGroup variant=\"flush\">\n        {isSuccess ? (\n          notifications.map((notification) => (\n            <NotificationItem\n              key={notification._id}\n              notification={notification}\n            />\n          ))\n        ) : (\n          <div className=\"message font-weight-bold\">No notifications yet</div>\n        )}\n      </ListGroup>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}